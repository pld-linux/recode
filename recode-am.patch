diff -Nur recode-3.5d.orig/acinclude.m4 recode-3.5d/acinclude.m4
--- recode-3.5d.orig/acinclude.m4	Fri Dec  3 12:03:01 1999
+++ recode-3.5d/acinclude.m4	Fri Mar 16 02:43:16 2001
@@ -428,3 +428,317 @@
 
 dnl This is just to silence aclocal about the macro not being used
 ifelse([AC_DISABLE_FAST_INSTALL])dnl
+
+
+# The argument (often `../src') says where are the built sources to test,
+# relative to the built test directory.  Empty for a flat distribution, as
+# `.' gets always added in front of the search path by the `atconfig' script.
+
+AC_DEFUN(AT_CONFIG,
+[AT_TESTPATH=$1
+AC_SUBST(AT_TESTPATH)
+fp_PROG_ECHO
+])
+
+
+# Once this macro is called, you may output with no echo in a Makefile or
+# script using:  echo @ECHO_N@ "STRING_TO_OUTPUT@ECHO_C@".
+
+AC_DEFUN(fp_PROG_ECHO,
+[AC_CACHE_CHECK(how to suppress newlines using echo, fp_cv_prog_echo_nonl,
+[if (echo "testing\c"; echo 1,2,3) | grep c >/dev/null; then
+  if (echo -n testing; echo 1,2,3) | sed s/-n/xn/ | grep xn >/dev/null; then
+    fp_cv_prog_echo_nonl=no
+  else
+    fp_cv_prog_echo_nonl=option
+  fi
+else
+  fp_cv_prog_echo_nonl=escape
+fi
+])
+test $fp_cv_prog_echo_nonl = no \
+  && echo 2>&1 "WARNING: \`echo' not powerful enough for \`make check'"
+case $fp_cv_prog_echo_nonl in
+  no) ECHO_N= ECHO_C= ;;
+  option) ECHO_N=-n ECHO_C= ;;
+  escape) ECHO_N= ECHO_C='\c' ;;
+esac
+AC_SUBST(ECHO_N)dnl
+AC_SUBST(ECHO_C)dnl
+])
+
+# serial 2
+
+dnl ad_AC_PROG_FLEX
+dnl Look for flex or missing, then run AC_PROG_LEX and AC_DECL_YYTEXT
+AC_DEFUN(ad_AC_PROG_FLEX,
+[AC_CHECK_PROGS(LEX, flex, missing)
+if test "$LEX" = missing; then
+  LEX="\$(top_srcdir)/$ac_aux_dir/missing flex"
+  LEX_OUTPUT_ROOT=lex.yy
+  AC_SUBST(LEX_OUTPUT_ROOT)dnl
+else
+  AC_PROG_LEX
+  AC_DECL_YYTEXT
+fi])
+
+#serial 2
+
+dnl From Jim Meyering
+
+dnl Define HAVE_STRUCT_UTIMBUF if `struct utimbuf' is declared --
+dnl usually in <utime.h>.
+dnl Some systems have utime.h but don't declare the struct anywhere.
+
+AC_DEFUN(jm_STRUCT_UTIMBUF,
+[
+  AC_CHECK_HEADERS(utime.h)
+  AC_REQUIRE([AC_HEADER_TIME])
+  AC_CACHE_CHECK([for struct utimbuf], fu_cv_sys_struct_utimbuf,
+    [AC_TRY_COMPILE(
+      [
+#ifdef TIME_WITH_SYS_TIME
+# include <sys/time.h>
+# include <time.h>
+#else
+# ifdef HAVE_SYS_TIME_H
+#  include <sys/time.h>
+# else
+#  include <time.h>
+# endif
+#endif
+#ifdef HAVE_UTIME_H
+# include <utime.h>
+#endif
+      ],
+      [static struct utimbuf x; x.actime = x.modtime;],
+      fu_cv_sys_struct_utimbuf=yes,
+      fu_cv_sys_struct_utimbuf=no)
+    ])
+
+  if test $fu_cv_sys_struct_utimbuf = yes; then
+    AC_DEFINE_UNQUOTED(HAVE_STRUCT_UTIMBUF, 1,
+[Define if struct utimbuf is declared -- usually in <utime.h>.
+   Some systems have utime.h but don't declare the struct anywhere. ])
+  fi
+])
+
+#serial 3
+
+dnl From Jim Meyering.
+dnl Determine whether malloc accepts 0 as its argument.
+dnl If it doesn't, arrange to use the replacement function.
+dnl
+
+AC_DEFUN(jm_FUNC_MALLOC,
+[
+ dnl xmalloc.c requires that this symbol be defined so it doesn't
+ dnl mistakenly use a broken malloc -- as it might if this test were omitted.
+ AC_DEFINE_UNQUOTED(HAVE_DONE_WORKING_MALLOC_CHECK, 1,
+                    [Define if the malloc check has been performed. ])
+
+ AC_CACHE_CHECK([for working malloc], jm_cv_func_working_malloc,
+  [AC_TRY_RUN([
+    char *malloc ();
+    int
+    main ()
+    {
+      exit (malloc (0) ? 0 : 1);
+    }
+	  ],
+	 jm_cv_func_working_malloc=yes,
+	 jm_cv_func_working_malloc=no,
+	 dnl When crosscompiling, assume malloc is broken.
+	 jm_cv_func_working_malloc=no)
+  ])
+  if test $jm_cv_func_working_malloc = no; then
+    AC_SUBST(LIBOBJS)
+    LIBOBJS="$LIBOBJS malloc.$ac_objext"
+    AC_DEFINE_UNQUOTED(malloc, rpl_malloc,
+      [Define to rpl_malloc if the replacement function should be used.])
+  fi
+])
+
+#serial 3
+
+dnl From Jim Meyering.
+dnl Determine whether realloc works when both arguments are 0.
+dnl If it doesn't, arrange to use the replacement function.
+dnl
+
+AC_DEFUN(jm_FUNC_REALLOC,
+[
+ dnl xmalloc.c requires that this symbol be defined so it doesn't
+ dnl mistakenly use a broken realloc -- as it might if this test were omitted.
+ AC_DEFINE_UNQUOTED(HAVE_DONE_WORKING_REALLOC_CHECK, 1,
+                    [Define if the realloc check has been performed. ])
+
+ AC_CACHE_CHECK([for working realloc], jm_cv_func_working_realloc,
+  [AC_TRY_RUN([
+    char *realloc ();
+    int
+    main ()
+    {
+      exit (realloc (0, 0) ? 0 : 1);
+    }
+	  ],
+	 jm_cv_func_working_realloc=yes,
+	 jm_cv_func_working_realloc=no,
+	 dnl When crosscompiling, assume realloc is broken.
+	 jm_cv_func_working_realloc=no)
+  ])
+  if test $jm_cv_func_working_realloc = no; then
+    AC_SUBST(LIBOBJS)
+    LIBOBJS="$LIBOBJS realloc.$ac_objext"
+    AC_DEFINE_UNQUOTED(realloc, rpl_realloc,
+      [Define to rpl_realloc if the replacement function should be used.])
+  fi
+])
+
+
+AC_DEFUN(fp_OS_MICROSOFT,
+[AC_CACHE_CHECK([for MSDOS, Win95 or WinNT], fp_cv_os_microsoft,
+[if test -n "$COMSPEC"; then
+  # MSDOS or Win95
+   fp_cv_os_microsoft=yes
+elif test -n "$ComSpec"; then
+  # WinNT
+  fp_cv_os_microsoft=yes
+else
+  fp_cv_os_microsoft=no
+fi
+])])
+
+# Select gettext and choose translations to install.	-*- shell-script -*-
+# François Pinard <pinard@iro.umontreal.ca>, 1998.
+
+# Here is a check list about how one could use this macro.
+# - In the build directory, execute `make distclean'.
+# - Rename `po/' to `i18n/'.
+# - Recursively delete directory `intl/'.
+# - Add the following files:
+#    . `i18n/Makefile.am'
+#    . `m4/gettext.m4'
+#    . `lib/gettext.c'
+#    . `lib/gettext.h'.
+# - In top level `configure.in':
+#    . use `fp_WITH_GETTEXT'.
+#    . delete `AM_GNU_GETTEXT' and any `AC_LINK_FILES' for $nls variables.
+#    . add `i18n/Makefile' to `AC_OUTPUT'.
+#    . delete `intl/Makefile' and `po/Makefile.in' from `AC_OUTPUT'.
+# - In top level `Makefile.am':
+#    . add `i18n' in SUBDIRS, and remove `intl' and `po'.
+#    . define `POTFILES' (peek at previous `i18n/POTFILES.in).
+#    . add `$(srcdir)/stamp-pot' to `all-local'.
+#    . add rule for `$(srcdir)/stamp-pot'.
+# - In top level `acconfig.h':
+#    . document `HAVE_DCGETTEXT' and `LOCALEDIR'.
+#    . delete documentation for `HAVE_CATGETS'.
+# - In `lib/Makefile.am':
+#    . add `gettext.c' to `EXTRA_DIST'.
+#    . add `gettext.h' to `noinstl_HEADERS'.
+#    . add definitions for `localdir' and `aliaspath'.
+#    . add special rules for `gettext.o' and `gettext._o'.
+# - In `m4/Makefile.am':
+#    . add `gettext.m4' to `EXTRA_DIST'.
+# - In `src/Makefile.am':
+#    . delete `-I/..intl' from `INCLUDES'.
+#    . delete `@INTLLIBS@' from `LDADD'.
+#    . delete `localedir' and its references.
+# - Clean up directory `i18n/':
+#    . delete `Makefile.in.in' and `POTFILES.in'.
+#    . delete all `*.gmo' files, `cat-id-tbl.c' and `stamp-cat-id'.
+# - In the top level distribution directory:
+#    . run `aclocal -I m4'.
+#    . run `autoreconf'.
+# - In the build directory:
+#    . run `$top_srcdir/configure'.
+#    . run `make check'.
+
+AC_DEFUN(fp_WITH_GETTEXT, [
+
+  AC_MSG_CHECKING(whether NLS is wanted)
+  AC_ARG_ENABLE(nls,
+    [  --disable-nls           disallow Native Language Support],
+    enable_nls=$enableval, enable_nls=yes)
+  AC_MSG_RESULT($enable_nls)
+  use_nls=$enable_nls
+  AM_CONDITIONAL(USE_NLS, test $use_nls = yes)
+
+  if test $enable_nls = yes; then
+    AC_DEFINE(ENABLE_NLS)
+
+    AC_ARG_WITH(catgets,
+      [  --with-catgets          say that catgets is not supported],
+      [AC_MSG_WARN([catgets not supported, --with-catgets ignored])])
+
+    AC_CHECK_FUNCS(gettext)
+    AC_CHECK_LIB(intl, gettext, :)
+    if test $ac_cv_lib_intl_gettext$ac_cv_func_gettext != nono; then
+      AC_MSG_CHECKING(whether the included gettext is preferred)
+      AC_ARG_WITH(included-gettext,
+	[  --without-included-gettext avoid our provided version of gettext],
+	with_included_gettext=$withval, with_included_gettext=yes)
+      AC_MSG_RESULT($with_included_gettext)
+      if test $with_included_gettext$ac_cv_func_gettext = nono; then
+        LIBS="$LIBS -lintl"
+      fi
+    else
+      with_included_gettext=yes
+    fi
+    if test $with_included_gettext = yes; then
+      LIBOBJS="$LIBOBJS gettext.o"
+      AC_DEFINE(HAVE_GETTEXT)
+      AC_DEFINE(HAVE_DCGETTEXT)
+    else
+      AC_CHECK_HEADERS(libintl.h)
+      AC_CHECK_FUNCS(dcgettext gettext)
+    fi
+
+    AC_CHECK_HEADERS(locale.h)
+    AC_CHECK_FUNCS(getcwd setlocale stpcpy)
+    AM_LC_MESSAGES
+
+    if test -z "$ALL_LINGUAS"; then
+      AC_MSG_WARN(This package does not install translations yet.)
+    else
+      ac_items="$ALL_LINGUAS"
+      for ac_item in $ac_items; do
+	ALL_POFILES="$ALL_POFILES $ac_item.po"
+	ALL_MOFILES="$ALL_MOFILES $ac_item.mo"
+      done
+    fi
+    AC_SUBST(ALL_LINGUAS)
+    AC_SUBST(ALL_POFILES)
+    AC_SUBST(ALL_MOFILES)
+
+    AC_MSG_CHECKING(which translations to install)
+    if test -z "$LINGUAS"; then
+      ac_print="$ALL_LINGUAS"
+      MOFILES="$ALL_MOFILES"
+    else
+      ac_items="$LINGUAS"
+      for ac_item in $ac_items; do
+	case "$ALL_LINGUAS" in
+	  *$ac_item*)
+	    ac_print="$ac_print $ac_item"
+	    MOFILES="$MOFILES $ac_item.mo"
+	    ;;
+	esac
+      done
+    fi
+    AC_SUBST(MOFILES)
+    if test -z "$ac_print"; then
+      AC_MSG_RESULT(none)
+    else
+      AC_MSG_RESULT($ac_print)
+    fi
+
+    if test "x$prefix" = xNONE; then
+      AC_DEFINE_UNQUOTED(LOCALEDIR, "$ac_default_prefix/share/locale")
+    else
+      AC_DEFINE_UNQUOTED(LOCALEDIR, "$prefix/share/locale")
+    fi
+  fi])
+
+
